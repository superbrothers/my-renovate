name: Renovate

on:
  pull_request:
    types: [opened, synchronize]
    paths: [.github/workflows/renovate.yaml]
  schedule:
  - cron: '0 */12 * * *'
  workflow_dispatch:
  workflow_call:
    inputs:
      RENOVATE_ALLOW_POST_UPGRADE_COMMAND_TEMPLATING:
        description: "Set to 'true' to allow templating of dependency level post-upgrade commands."
        required: false
        default: "false"
        type: string
      RENOVATE_ALLOWED_POST_UPGRADE_COMMANDS:
        description: "A list of regular expressions that decide which commands in postUpgradeTasks are allowed to run. If this list is empty then no tasks will be executed."
        required: false
        default: ""
        type: string

jobs:
  run:
    runs-on: ubuntu-latest
    env:
      # renovate: datasource=docker depName=renovate/renovate versioning=docker
      RENOVATE_VERSION: "35.57"
      RENOVATE_CACHE_PATH: renovate-image
    steps:
    - name: Cache a renovate image
      id: cache-renovate
      uses: actions/cache@v3
      with:
        path: ${{ env.RENOVATE_CACHE_PATH }}
        key: ${{ runner.os }}-renovate-image-${{ env.RENOVATE_VERSION }}
        restore-keys: ${{ runner.os }}-renovate-image-
    - name: Pull and save a renovate image
      if: steps.cache-renovate.outputs.cache-hit != 'true'
      run: |
        docker pull "docker.io/renovate/renovate:${RENOVATE_VERSION}"
        docker save "docker.io/renovate/renovate:${RENOVATE_VERSION}" -o "$RENOVATE_CACHE_PATH"
    - name: Load a renovate image
      run: |
        docker load -i "$RENOVATE_CACHE_PATH"
        docker pull "docker.io/renovate/renovate:${RENOVATE_VERSION}"
    - name: Validate Renovate config
      run: |
        docker run -v "${PWD}:/app" -w /app "docker.io/renovate/renovate:${RENOVATE_VERSION}" renovate-config-validator
    - name: Get token
      uses: tibdex/github-app-token@v1
      id: get_token
      with:
        app_id: ${{ secrets.APP_ID }}
        private_key: ${{ secrets.PRIVATE_KEY }}
    - name: Run renovate
      run: |
       docker run \
         -e RENOVATE_REPOSITORIES \
         -e RENOVATE_USERNAME \
         -e RENOVATE_GIT_AUTHOR \
         -e RENOVATE_ALLOW_POST_UPGRADE_COMMAND_TEMPLATING \
         -e RENOVATE_ALLOWED_POST_UPGRADE_COMMANDS \
         -e RENOVATE_DRY_RUN \
         -e RENOVATE_BASE_BRANCHES \
         -e RENOVATE_TOKEN \
         -v /var/run/docker.sock:/var/run/docker.sock \
         -v /usr/libexec/docker/cli-plugins:/usr/libexec/docker/cli-plugins \
         -v /tmp:/tmp \
         -u "1000:$(getent group docker | awk -F: '{print $3}')" \
         "docker.io/renovate/renovate:${RENOVATE_VERSION}"
      env:
        RENOVATE_REPOSITORIES: ${{ github.repository }}
        RENOVATE_USERNAME: "my-own-renovate[bot]"
        RENOVATE_GIT_AUTHOR: "my-own-renovate <131369181+self-hosted-renovate[bot]@users.noreply.github.com>"
        RENOVATE_ALLOW_POST_UPGRADE_COMMAND_TEMPLATING: ${{ inputs.RENOVATE_ALLOW_POST_UPGRADE_COMMAND_TEMPLATING || 'false' }}
        RENOVATE_ALLOWED_POST_UPGRADE_COMMANDS: ${{ inputs.RENOVATE_ALLOWED_POST_UPGRADE_COMMANDS || '' }}
        RENOVATE_DRY_RUN: ${{ github.event.pull_request && 'full' || null }}
        RENOVATE_BASE_BRANCHES: ${{ github.head_ref || '' }}
        RENOVATE_TOKEN: ${{ steps.get_token.outputs.token }}
        RENOVATE_GIT: ${{ steps.get_token.outputs.token }}
